<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="47" started-at="2016-09-14T21:17:42Z" finished-at="2016-09-14T21:17:42Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="47" started-at="2016-09-14T21:17:42Z" finished-at="2016-09-14T21:17:42Z">
      <class name="test.apartment.list.ControllerTest">
        <test-method status="FAIL" signature="testGenerateSnippet()[pri:0, instance:test.apartment.list.ControllerTest@373ac0]" name="testGenerateSnippet" duration-ms="21" started-at="2016-09-14T14:17:42Z" finished-at="2016-09-14T14:17:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Our luxury loft-style apartments were constructed as condominiums, so your new residence will have: Solid floors and walls (this will be the quietest apartment you've EVER lived in); Premium stainless steel designer appliances; Distinctive accent walls and hardwood flooring; A kitchen that most chefs would drool over with easy to clean gas stove and countertops; Walk in closets with built in storage; Full size washer and dryer in each apartment home. In addition, all residents will enjoy use of our top-notch amenities, including reserved parking, cutting-edge fitness center, wireless internet cafe/business center, and rooftop lounge to soak up the sun!; Should have a bath.] but found [Premium stainless steel designer appliances; A kitchen that most chefs would drool over with easy to clean gas stove and countertops;]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Our luxury loft-style apartments were constructed as condominiums, so your new residence will have: Solid floors and walls (this will be the quietest apartment you've EVER lived in); Premium stainless steel designer appliances; Distinctive accent walls and hardwood flooring; A kitchen that most chefs would drool over with easy to clean gas stove and countertops; Walk in closets with built in storage; Full size washer and dryer in each apartment home. In addition, all residents will enjoy use of our top-notch amenities, including reserved parking, cutting-edge fitness center, wireless internet cafe/business center, and rooftop lounge to soak up the sun!; Should have a bath.] but found [Premium stainless steel designer appliances; A kitchen that most chefs would drool over with easy to clean gas stove and countertops;]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at test.apartment.list.ControllerTest.testGenerateSnippet(ControllerTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateSnippet -->
        <test-method status="PASS" signature="testGetAllFeatures()[pri:0, instance:test.apartment.list.ControllerTest@373ac0]" name="testGetAllFeatures" duration-ms="1" started-at="2016-09-14T14:17:42Z" finished-at="2016-09-14T14:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllFeatures -->
        <test-method status="PASS" signature="testGetDetailsSpecificToFeature()[pri:0, instance:test.apartment.list.ControllerTest@373ac0]" name="testGetDetailsSpecificToFeature" duration-ms="1" started-at="2016-09-14T14:17:42Z" finished-at="2016-09-14T14:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDetailsSpecificToFeature -->
        <test-method status="PASS" signature="testGetFeatureRequested()[pri:0, instance:test.apartment.list.ControllerTest@373ac0]" name="testGetFeatureRequested" duration-ms="1" started-at="2016-09-14T14:17:42Z" finished-at="2016-09-14T14:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureRequested -->
      </class> <!-- test.apartment.list.ControllerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
